version: '3'
services:

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    working_dir: /app/project
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - POSTGRES_DB=my_database
      - POSTGRES_USER=my_username
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - my_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"  # Redis port
    networks:
      - my_network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    working_dir: /app/project
    command: python -m celery -A project beat --loglevel=debug
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    volumes:
      - .:/app
    networks:
      - my_network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    working_dir: /app/project
    command: python -m celery -A project worker --loglevel=debug
    environment:
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_DB=my_database
      - POSTGRES_USER=my_username
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
    depends_on:
      - redis
    volumes:
      - .:/app
    networks:
      - my_network

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: my_database
      POSTGRES_USER: my_username
      POSTGRES_PASSWORD: my_password
      POSTGRES_PORT: 5432
      POSTGRES_HOST: localhost
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

networks:
  my_network:
volumes:
  postgres_data:
